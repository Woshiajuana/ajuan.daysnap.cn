name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      # 获取源码
      - name: Checkout
        uses: actions/checkout@v2

      # 设置 node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      # 安装依赖 打包
      - name: Install and Build
        run: |
          node -v
          pnpm install
          pnpm run build

      # 博客资源发布到目标服务器
      - name: Upload Blog Assets
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }} # 公网ip
          username: ${{ secrets.REMOTE_USERNAME }} # 用户名
          key: ${{ secrets.PRIVATE_KEY }} # 私钥
          source: "./blog/articles,./blog/images,./blog/mocks" # 发送文件
          target: "/web/blog/assets/" # 目标目录
          strip_components: 2

      # 网站发布到目标服务器
      - name: Upload Website
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }} # 公网ip
          username: ${{ secrets.REMOTE_USERNAME }} # 用户名
          key: ${{ secrets.PRIVATE_KEY }} # 私钥
          source: "./website/.next,./website/public,./website/package.json,./website/.npmrc" # 发送文件
          target: "/web/blog/" # 目标目录
          strip_components: 2

     # 对应第6步，重启安装依赖、后端服务2
      - name: Server Reload
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /web/blog
            npm i
            npm run restart
  
  # algolia:
  #     needs: deploy
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v2
  #       - name: Get the content of algolia.json as config
  #         id: algolia_config
  #         run: echo "::set-output name=config::$(cat website/algolia.json | jq -r tostring)"
  #       - name: Push indices to Algolia
  #         uses: signcl/docsearch-scraper-action@master
  #         env:
  #           APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
  #           API_KEY: ${{ secrets.API_KEY }}
  #           CONFIG: ${{ steps.algolia_config.outputs.config }}